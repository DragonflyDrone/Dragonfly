package WrapperDSL.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class GimbalConditionalExpression_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append(SPropertyOperations.getEnum(ctx.getPrimaryInput(), PROPS.operators$7YWv).toString());
    tgs.append(SPropertyOperations.getEnum(ctx.getPrimaryInput(), PROPS.right$7YWY).toString());
  }

  private static final class PROPS {
    /*package*/ static final SProperty operators$7YWv = MetaAdapterFactory.getProperty(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b71646L, 0x1053550ed8b71648L, "operators");
    /*package*/ static final SProperty right$7YWY = MetaAdapterFactory.getProperty(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b71646L, 0x1053550ed8b71649L, "right");
  }
}
