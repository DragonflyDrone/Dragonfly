package WrapperDSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAdaptationBehavior = createDescriptorForAdaptationBehavior();
  /*package*/ final ConceptDescriptor myConceptAdaptationScript = createDescriptorForAdaptationScript();
  /*package*/ final ConceptDescriptor myConceptAltitudeConditionalExpression = createDescriptorForAltitudeConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptAngularAccelerationConditionalExpression = createDescriptorForAngularAccelerationConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptBatteryConditionalExpression = createDescriptorForBatteryConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptCameraPowerConditionalExtension = createDescriptorForCameraPowerConditionalExtension();
  /*package*/ final ConceptDescriptor myConceptCancelGoHome = createDescriptorForCancelGoHome();
  /*package*/ final ConceptDescriptor myConceptCancelLanding = createDescriptorForCancelLanding();
  /*package*/ final ConceptDescriptor myConceptCancelTakeOff = createDescriptorForCancelTakeOff();
  /*package*/ final ConceptDescriptor myConceptCategoricalDistanceConditionalExpression = createDescriptorForCategoricalDistanceConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptCategoricalWindConditionalExpression = createDescriptorForCategoricalWindConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptCommand = createDescriptorForCommand();
  /*package*/ final ConceptDescriptor myConceptCommandCall = createDescriptorForCommandCall();
  /*package*/ final ConceptDescriptor myConceptCompassConditionalExpression = createDescriptorForCompassConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptConditionalExpression = createDescriptorForConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptConfirmLanding = createDescriptorForConfirmLanding();
  /*package*/ final ConceptDescriptor myConceptConjunctionLogicalExpression = createDescriptorForConjunctionLogicalExpression();
  /*package*/ final ConceptDescriptor myConceptCoordenateConditionalExpression = createDescriptorForCoordenateConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptDisjunctionLogicalExpression = createDescriptorForDisjunctionLogicalExpression();
  /*package*/ final ConceptDescriptor myConceptExceptionalScenario = createDescriptorForExceptionalScenario();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptGimbalConditionalExtension = createDescriptorForGimbalConditionalExtension();
  /*package*/ final ConceptDescriptor myConceptGiven = createDescriptorForGiven();
  /*package*/ final ConceptDescriptor myConceptIf = createDescriptorForIf();
  /*package*/ final ConceptDescriptor myConceptLandingGearConditionalExtension = createDescriptorForLandingGearConditionalExtension();
  /*package*/ final ConceptDescriptor myConceptLinearAccelerationConditionalExtension = createDescriptorForLinearAccelerationConditionalExtension();
  /*package*/ final ConceptDescriptor myConceptLogicalExpression = createDescriptorForLogicalExpression();
  /*package*/ final ConceptDescriptor myConceptMathElement = createDescriptorForMathElement();
  /*package*/ final ConceptDescriptor myConceptMotorsPowerConditionalExtension = createDescriptorForMotorsPowerConditionalExtension();
  /*package*/ final ConceptDescriptor myConceptOriginAndDestinationDistanceConditionalExpression = createDescriptorForOriginAndDestinationDistanceConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptPauseMission = createDescriptorForPauseMission();
  /*package*/ final ConceptDescriptor myConceptPayloadConditionalExtension = createDescriptorForPayloadConditionalExtension();
  /*package*/ final ConceptDescriptor myConceptRegionConditionalExpression = createDescriptorForRegionConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptResumeMission = createDescriptorForResumeMission();
  /*package*/ final ConceptDescriptor myConceptSafeLand = createDescriptorForSafeLand();
  /*package*/ final ConceptDescriptor myConceptScalarDistanceConditionalExpression = createDescriptorForScalarDistanceConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptScalarWindConditionalExpression = createDescriptorForScalarWindConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptSetAutoFlightSpeed = createDescriptorForSetAutoFlightSpeed();
  /*package*/ final ConceptDescriptor myConceptSetGoHomeHeightInMeters = createDescriptorForSetGoHomeHeightInMeters();
  /*package*/ final ConceptDescriptor myConceptSetHomeLocation = createDescriptorForSetHomeLocation();
  /*package*/ final ConceptDescriptor myConceptSetHomeLocationUsingAircraftCurrentLocation = createDescriptorForSetHomeLocationUsingAircraftCurrentLocation();
  /*package*/ final ConceptDescriptor myConceptSetLowBatteryWarningThreshold = createDescriptorForSetLowBatteryWarningThreshold();
  /*package*/ final ConceptDescriptor myConceptSetSeriousLowBatteryWarningThreshold = createDescriptorForSetSeriousLowBatteryWarningThreshold();
  /*package*/ final ConceptDescriptor myConceptSetSmartReturnToHomeEnabled = createDescriptorForSetSmartReturnToHomeEnabled();
  /*package*/ final ConceptDescriptor myConceptSpeedConditionalExpression = createDescriptorForSpeedConditionalExpression();
  /*package*/ final ConceptDescriptor myConceptStartGoHome = createDescriptorForStartGoHome();
  /*package*/ final ConceptDescriptor myConceptStartLanding = createDescriptorForStartLanding();
  /*package*/ final ConceptDescriptor myConceptStartMission = createDescriptorForStartMission();
  /*package*/ final ConceptDescriptor myConceptStartPrecisionTakeOff = createDescriptorForStartPrecisionTakeOff();
  /*package*/ final ConceptDescriptor myConceptStartTakeOff = createDescriptorForStartTakeOff();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptText = createDescriptorForText();
  /*package*/ final ConceptDescriptor myConceptThen = createDescriptorForThen();
  /*package*/ final ConceptDescriptor myConceptTurnOffMotors = createDescriptorForTurnOffMotors();
  /*package*/ final ConceptDescriptor myConceptTurnOnMotors = createDescriptorForTurnOnMotors();
  /*package*/ final ConceptDescriptor myConceptValue = createDescriptorForValue();
  /*package*/ final ConceptDescriptor myConceptWhen = createDescriptorForWhen();
  /*package*/ final ConceptDescriptor myConceptWhile = createDescriptorForWhile();
  /*package*/ final ConceptDescriptor myConceptWifiConditionalExtension = createDescriptorForWifiConditionalExtension();
  /*package*/ final EnumerationDescriptor myEnumerationAxisEnum = new EnumerationDescriptor_AxisEnum();
  /*package*/ final EnumerationDescriptor myEnumerationCategoricalDistanceEnum = new EnumerationDescriptor_CategoricalDistanceEnum();
  /*package*/ final EnumerationDescriptor myEnumerationCategoricalWindEnum = new EnumerationDescriptor_CategoricalWindEnum();
  /*package*/ final EnumerationDescriptor myEnumerationCommandEnum = new EnumerationDescriptor_CommandEnum();
  /*package*/ final EnumerationDescriptor myEnumerationConditionalOperatorEnum = new EnumerationDescriptor_ConditionalOperatorEnum();
  /*package*/ final EnumerationDescriptor myEnumerationDirectionsEnum = new EnumerationDescriptor_DirectionsEnum();
  /*package*/ final EnumerationDescriptor myEnumerationInaquelityConditionalOperator = new EnumerationDescriptor_InaquelityConditionalOperator();
  /*package*/ final EnumerationDescriptor myEnumerationIqualityOperatorEnum = new EnumerationDescriptor_IqualityOperatorEnum();
  /*package*/ final EnumerationDescriptor myEnumerationLogicalOperatorEnum = new EnumerationDescriptor_LogicalOperatorEnum();
  /*package*/ final EnumerationDescriptor myEnumerationOnOffConditionalEnum = new EnumerationDescriptor_OnOffConditionalEnum();
  /*package*/ final EnumerationDescriptor myEnumerationRegionEnum = new EnumerationDescriptor_RegionEnum();
  /*package*/ final EnumerationDescriptor myEnumerationTypeOfAdaptationEnum = new EnumerationDescriptor_TypeOfAdaptationEnum();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAdaptationBehavior, myConceptAdaptationScript, myConceptAltitudeConditionalExpression, myConceptAngularAccelerationConditionalExpression, myConceptBatteryConditionalExpression, myConceptCameraPowerConditionalExtension, myConceptCancelGoHome, myConceptCancelLanding, myConceptCancelTakeOff, myConceptCategoricalDistanceConditionalExpression, myConceptCategoricalWindConditionalExpression, myConceptCommand, myConceptCommandCall, myConceptCompassConditionalExpression, myConceptConditionalExpression, myConceptConfirmLanding, myConceptConjunctionLogicalExpression, myConceptCoordenateConditionalExpression, myConceptDisjunctionLogicalExpression, myConceptExceptionalScenario, myConceptExpression, myConceptGimbalConditionalExtension, myConceptGiven, myConceptIf, myConceptLandingGearConditionalExtension, myConceptLinearAccelerationConditionalExtension, myConceptLogicalExpression, myConceptMathElement, myConceptMotorsPowerConditionalExtension, myConceptOriginAndDestinationDistanceConditionalExpression, myConceptPauseMission, myConceptPayloadConditionalExtension, myConceptRegionConditionalExpression, myConceptResumeMission, myConceptSafeLand, myConceptScalarDistanceConditionalExpression, myConceptScalarWindConditionalExpression, myConceptSetAutoFlightSpeed, myConceptSetGoHomeHeightInMeters, myConceptSetHomeLocation, myConceptSetHomeLocationUsingAircraftCurrentLocation, myConceptSetLowBatteryWarningThreshold, myConceptSetSeriousLowBatteryWarningThreshold, myConceptSetSmartReturnToHomeEnabled, myConceptSpeedConditionalExpression, myConceptStartGoHome, myConceptStartLanding, myConceptStartMission, myConceptStartPrecisionTakeOff, myConceptStartTakeOff, myConceptStatement, myConceptText, myConceptThen, myConceptTurnOffMotors, myConceptTurnOnMotors, myConceptValue, myConceptWhen, myConceptWhile, myConceptWifiConditionalExtension);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AdaptationBehavior:
        return myConceptAdaptationBehavior;
      case LanguageConceptSwitch.AdaptationScript:
        return myConceptAdaptationScript;
      case LanguageConceptSwitch.AltitudeConditionalExpression:
        return myConceptAltitudeConditionalExpression;
      case LanguageConceptSwitch.AngularAccelerationConditionalExpression:
        return myConceptAngularAccelerationConditionalExpression;
      case LanguageConceptSwitch.BatteryConditionalExpression:
        return myConceptBatteryConditionalExpression;
      case LanguageConceptSwitch.CameraPowerConditionalExtension:
        return myConceptCameraPowerConditionalExtension;
      case LanguageConceptSwitch.CancelGoHome:
        return myConceptCancelGoHome;
      case LanguageConceptSwitch.CancelLanding:
        return myConceptCancelLanding;
      case LanguageConceptSwitch.CancelTakeOff:
        return myConceptCancelTakeOff;
      case LanguageConceptSwitch.CategoricalDistanceConditionalExpression:
        return myConceptCategoricalDistanceConditionalExpression;
      case LanguageConceptSwitch.CategoricalWindConditionalExpression:
        return myConceptCategoricalWindConditionalExpression;
      case LanguageConceptSwitch.Command:
        return myConceptCommand;
      case LanguageConceptSwitch.CommandCall:
        return myConceptCommandCall;
      case LanguageConceptSwitch.CompassConditionalExpression:
        return myConceptCompassConditionalExpression;
      case LanguageConceptSwitch.ConditionalExpression:
        return myConceptConditionalExpression;
      case LanguageConceptSwitch.ConfirmLanding:
        return myConceptConfirmLanding;
      case LanguageConceptSwitch.ConjunctionLogicalExpression:
        return myConceptConjunctionLogicalExpression;
      case LanguageConceptSwitch.CoordenateConditionalExpression:
        return myConceptCoordenateConditionalExpression;
      case LanguageConceptSwitch.DisjunctionLogicalExpression:
        return myConceptDisjunctionLogicalExpression;
      case LanguageConceptSwitch.ExceptionalScenario:
        return myConceptExceptionalScenario;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.GimbalConditionalExtension:
        return myConceptGimbalConditionalExtension;
      case LanguageConceptSwitch.Given:
        return myConceptGiven;
      case LanguageConceptSwitch.If:
        return myConceptIf;
      case LanguageConceptSwitch.LandingGearConditionalExtension:
        return myConceptLandingGearConditionalExtension;
      case LanguageConceptSwitch.LinearAccelerationConditionalExtension:
        return myConceptLinearAccelerationConditionalExtension;
      case LanguageConceptSwitch.LogicalExpression:
        return myConceptLogicalExpression;
      case LanguageConceptSwitch.MathElement:
        return myConceptMathElement;
      case LanguageConceptSwitch.MotorsPowerConditionalExtension:
        return myConceptMotorsPowerConditionalExtension;
      case LanguageConceptSwitch.OriginAndDestinationDistanceConditionalExpression:
        return myConceptOriginAndDestinationDistanceConditionalExpression;
      case LanguageConceptSwitch.PauseMission:
        return myConceptPauseMission;
      case LanguageConceptSwitch.PayloadConditionalExtension:
        return myConceptPayloadConditionalExtension;
      case LanguageConceptSwitch.RegionConditionalExpression:
        return myConceptRegionConditionalExpression;
      case LanguageConceptSwitch.ResumeMission:
        return myConceptResumeMission;
      case LanguageConceptSwitch.SafeLand:
        return myConceptSafeLand;
      case LanguageConceptSwitch.ScalarDistanceConditionalExpression:
        return myConceptScalarDistanceConditionalExpression;
      case LanguageConceptSwitch.ScalarWindConditionalExpression:
        return myConceptScalarWindConditionalExpression;
      case LanguageConceptSwitch.SetAutoFlightSpeed:
        return myConceptSetAutoFlightSpeed;
      case LanguageConceptSwitch.SetGoHomeHeightInMeters:
        return myConceptSetGoHomeHeightInMeters;
      case LanguageConceptSwitch.SetHomeLocation:
        return myConceptSetHomeLocation;
      case LanguageConceptSwitch.SetHomeLocationUsingAircraftCurrentLocation:
        return myConceptSetHomeLocationUsingAircraftCurrentLocation;
      case LanguageConceptSwitch.SetLowBatteryWarningThreshold:
        return myConceptSetLowBatteryWarningThreshold;
      case LanguageConceptSwitch.SetSeriousLowBatteryWarningThreshold:
        return myConceptSetSeriousLowBatteryWarningThreshold;
      case LanguageConceptSwitch.SetSmartReturnToHomeEnabled:
        return myConceptSetSmartReturnToHomeEnabled;
      case LanguageConceptSwitch.SpeedConditionalExpression:
        return myConceptSpeedConditionalExpression;
      case LanguageConceptSwitch.StartGoHome:
        return myConceptStartGoHome;
      case LanguageConceptSwitch.StartLanding:
        return myConceptStartLanding;
      case LanguageConceptSwitch.StartMission:
        return myConceptStartMission;
      case LanguageConceptSwitch.StartPrecisionTakeOff:
        return myConceptStartPrecisionTakeOff;
      case LanguageConceptSwitch.StartTakeOff:
        return myConceptStartTakeOff;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.Text:
        return myConceptText;
      case LanguageConceptSwitch.Then:
        return myConceptThen;
      case LanguageConceptSwitch.TurnOffMotors:
        return myConceptTurnOffMotors;
      case LanguageConceptSwitch.TurnOnMotors:
        return myConceptTurnOnMotors;
      case LanguageConceptSwitch.Value:
        return myConceptValue;
      case LanguageConceptSwitch.When:
        return myConceptWhen;
      case LanguageConceptSwitch.While:
        return myConceptWhile;
      case LanguageConceptSwitch.WifiConditionalExtension:
        return myConceptWifiConditionalExtension;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationAxisEnum, myEnumerationCategoricalDistanceEnum, myEnumerationCategoricalWindEnum, myEnumerationCommandEnum, myEnumerationConditionalOperatorEnum, myEnumerationDirectionsEnum, myEnumerationInaquelityConditionalOperator, myEnumerationIqualityOperatorEnum, myEnumerationLogicalOperatorEnum, myEnumerationOnOffConditionalEnum, myEnumerationRegionEnum, myEnumerationTypeOfAdaptationEnum);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAdaptationBehavior() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "AdaptationBehavior", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x4cdb8f81da5c7de7L);
    b.class_(false, false, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/5538177954659204583");
    b.version(2);
    b.property("typeOfAdaptation", 0x4cdb8f81da5c7decL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b44a3L)).origin("5538177954659204588").done();
    b.associate("adaptationScriptName", 0x4cdb8f81da5c7df2L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc046e0b54L).optional(false).origin("5538177954659204594").done();
    b.aggregate("adaptationScript", 0x4cdb8f81da5c7e5cL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc046e0b54L).optional(false).ordered(true).multiple(false).origin("5538177954659204700").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAdaptationScript() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "AdaptationScript", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc046e0b54L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596691614548");
    b.version(2);
    b.aggregate("body", 0x53be3ecc0480a64aL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b453cL).optional(false).ordered(true).multiple(false).origin("6034329596692833866").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAltitudeConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "AltitudeConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8ac3a37L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/1176377449926900279");
    b.version(2);
    b.property("operators", 0x1053550ed8ac3a38L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("1176377449926900280").done();
    b.aggregate("right", 0x1053550ed8ac3a3aL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("1176377449926900282").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAngularAccelerationConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "AngularAccelerationConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1e50d2b0bcf0f56aL);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/2184477475800675690");
    b.version(2);
    b.property("left", 0x3004f1bb9b11a30eL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x3004f1bb9b11a311L)).origin("3460156201790186254").done();
    b.property("operator", 0x1e50d2b0bcf0f56dL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("2184477475800675693").done();
    b.aggregate("right", 0x1e50d2b0bcf0f571L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("2184477475800675697").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBatteryConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "BatteryConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc04699240L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596691321408");
    b.version(2);
    b.property("operator", 0x7970d3ea9334a569L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("8750727080426382697").done();
    b.aggregate("left", 0x7970d3ea93320930L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3feL).optional(false).ordered(true).multiple(false).origin("8750727080426211632").done();
    b.aggregate("right", 0x7970d3ea93320932L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("8750727080426211634").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCameraPowerConditionalExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CameraPowerConditionalExtension", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b71613L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/1176377449927611923");
    b.version(2);
    b.property("operators", 0x1053550ed8b71615L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("1176377449927611925").done();
    b.property("right", 0x1053550ed8b71616L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b2a0a8L)).origin("1176377449927611926").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCancelGoHome() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CancelGoHome", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895a9525L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429976357");
    b.version(2);
    b.alias("cancelGoHome");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCancelLanding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CancelLanding", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895a94d4L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429976276");
    b.version(2);
    b.alias("cancelLanding");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCancelTakeOff() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CancelTakeOff", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358959647dL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429898365");
    b.version(2);
    b.alias("cancelTakeOff");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCategoricalDistanceConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CategoricalDistanceConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea933febfdL);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/8750727080427121661");
    b.version(2);
    b.property("operator", 0x7970d3ea933fec00L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("8750727080427121664").done();
    b.property("right", 0x7970d3ea933fec09L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea933fec04L)).origin("8750727080427121673").done();
    b.property("left", 0x7970d3ea933fec0cL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea933fec04L)).origin("8750727080427121676").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCategoricalWindConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CategoricalWindConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8cddL);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336989");
    b.version(2);
    b.property("operator", 0x7970d3ea9334a572L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("8750727080426382706").done();
    b.property("right", 0x7970d3ea9335d497L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9335d47aL)).origin("8750727080426460311").done();
    b.aggregate("left", 0x7970d3ea9334a56dL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3feL).optional(false).ordered(true).multiple(false).origin("8750727080426382701").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Command", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc047dcb4aL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Statement", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b453cL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596692646730");
    b.version(2);
    b.property("commandValue", 0x53be3ecc04847a19L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b44aeL)).origin("6034329596693084697").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.class_(false, true, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429675304");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompassConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CompassConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x3f0a90391eda7f7L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/283912609322608631");
    b.version(2);
    b.property("operators", 0x3f0a90391eda7faL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("283912609322608634").done();
    b.property("right", 0x1053550ed8a37de3L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8a37db5L)).origin("1176377449926327779").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.interface_();
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/8750727080426030587");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConfirmLanding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ConfirmLanding", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895a94efL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429976303");
    b.version(2);
    b.alias("confirmLanding");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConjunctionLogicalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ConjunctionLogicalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8c9bL);
    b.class_(false, false, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336923");
    b.version(2);
    b.aggregate("left", 0x7970d3ea933095deL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("8750727080426116574").done();
    b.aggregate("right", 0x7970d3ea933095e0L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("8750727080426116576").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCoordenateConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CoordenateConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8ce3L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336995");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDisjunctionLogicalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "DisjunctionLogicalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8c9cL);
    b.class_(false, false, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336924");
    b.version(2);
    b.aggregate("left", 0x7970d3ea933095e3L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("8750727080426116579").done();
    b.aggregate("right", 0x7970d3ea933095e5L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("8750727080426116581").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExceptionalScenario() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ExceptionalScenario", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bc3L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336707");
    b.version(2);
    b.aggregate("given", 0x53be3ecc045a8bcdL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bcaL).optional(false).ordered(true).multiple(false).origin("6034329596690336717").done();
    b.aggregate("when", 0x53be3ecc045a8bcfL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bcbL).optional(false).ordered(true).multiple(false).origin("6034329596690336719").done();
    b.aggregate("then", 0x53be3ecc045a8bd2L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bccL).optional(false).ordered(true).multiple(false).origin("6034329596690336722").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Expression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL);
    b.interface_();
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/8750727080426002237");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGimbalConditionalExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "GimbalConditionalExtension", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b71646L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/1176377449927611974");
    b.version(2);
    b.property("operators", 0x1053550ed8b71648L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("1176377449927611976").done();
    b.property("right", 0x1053550ed8b71649L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b2a0a8L)).origin("1176377449927611977").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGiven() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Given", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bcaL);
    b.class_(false, false, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336714");
    b.version(2);
    b.aggregate("expression", 0x53be3ecc045b453aL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("6034329596690384186").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIf() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "If", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b45abL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Statement", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b453cL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690384299");
    b.version(2);
    b.aggregate("condition", 0x53be3ecc045b4670L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("6034329596690384496").done();
    b.aggregate("body", 0x53be3ecc045b4672L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b453cL).optional(true).ordered(true).multiple(false).origin("6034329596690384498").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLandingGearConditionalExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "LandingGearConditionalExtension", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b3fbfaL);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/1176377449927408634");
    b.version(2);
    b.property("operators", 0x1053550ed8b3fbfcL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("1176377449927408636").done();
    b.property("right", 0x1053550ed8b3fbfdL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b2a0a8L)).origin("1176377449927408637").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLinearAccelerationConditionalExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "LinearAccelerationConditionalExtension", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x3004f1bb9b15123cL);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/3460156201790411324");
    b.version(2);
    b.property("left", 0x3004f1bb9b15124bL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x3004f1bb9b11a311L)).origin("3460156201790411339").done();
    b.property("operator", 0x3004f1bb9b15124dL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("3460156201790411341").done();
    b.aggregate("right", 0x3004f1bb9b151250L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("3460156201790411344").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLogicalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "LogicalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97fbL);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/8750727080426179938");
    b.version(2);
    b.property("operator", 0x7970d3ea932f45f9L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bdfL)).origin("8750727080426030585").done();
    b.aggregate("left", 0x7970d3ea93318d65L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("8750727080426179941").done();
    b.aggregate("right", 0x7970d3ea93318d66L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("8750727080426179942").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMathElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "MathElement", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bd6L);
    b.class_(false, true, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336726");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMotorsPowerConditionalExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "MotorsPowerConditionalExtension", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b2a0a3L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/1176377449927319715");
    b.version(2);
    b.property("operators", 0x1053550ed8b2a0adL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("1176377449927319725").done();
    b.property("right", 0x1053550ed8b2a0afL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b2a0a8L)).origin("1176377449927319727").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOriginAndDestinationDistanceConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "OriginAndDestinationDistanceConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x72508e21f03ced43L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/8237239994876226883");
    b.version(2);
    b.property("left", 0x72508e21f03ced46L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea933fec04L)).origin("8237239994876226886").done();
    b.property("operator", 0x72508e21f03ced48L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("8237239994876226888").done();
    b.aggregate("right1", 0x72508e21f03ced4bL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("8237239994876226891").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPauseMission() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "PauseMission", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895bcb96L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689430055830");
    b.version(2);
    b.alias("pauseMission");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPayloadConditionalExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "PayloadConditionalExtension", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b3fc74L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/1176377449927408756");
    b.version(2);
    b.property("operators", 0x1053550ed8b3fc76L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("1176377449927408758").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRegionConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "RegionConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8ce0L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336992");
    b.version(2);
    b.property("right", 0x72508e21f03ae4a8L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x72508e21f03ae4a3L)).origin("8237239994876093608").done();
    b.property("operator", 0x72508e21f03ae4c4L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("8237239994876093636").done();
    b.aggregate("left", 0x72508e21f03ae4c2L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3feL).optional(false).ordered(true).multiple(false).origin("8237239994876093634").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResumeMission() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ResumeMission", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895bcbb1L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689430055857");
    b.version(2);
    b.alias("resumeMission");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSafeLand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SafeLand", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x4f78da14d91a0524L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/5726566709278147876");
    b.version(2);
    b.alias("safe land");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScalarDistanceConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ScalarDistanceConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc048c5944L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596693600580");
    b.version(2);
    b.property("operator", 0x7970d3ea9341d077L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("8750727080427245687").done();
    b.property("left", 0x7970d3ea9341d079L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea933fec04L)).origin("8750727080427245689").done();
    b.aggregate("right", 0x7970d3ea9341d07fL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("8750727080427245695").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScalarWindConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ScalarWindConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea93368919L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/8750727080426506521");
    b.version(2);
    b.property("operator", 0x7970d3ea93368922L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("8750727080426506530").done();
    b.aggregate("left", 0x7970d3ea9336891aL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3feL).optional(false).ordered(true).multiple(false).origin("8750727080426506522").done();
    b.aggregate("right", 0x7970d3ea9336891dL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("8750727080426506525").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetAutoFlightSpeed() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SetAutoFlightSpeed", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895bcbe8L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689430055912");
    b.version(2);
    b.aggregate("speed", 0x6e9fd935895bcc06L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("7971328689430055942").done();
    b.alias("setAutoFlightSpeed");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetGoHomeHeightInMeters() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SetGoHomeHeightInMeters", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895a955bL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429976411");
    b.version(2);
    b.aggregate("height", 0x6e9fd935895a956fL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("7971328689429976431").done();
    b.alias("SetGoHomeHeightInMeters");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetHomeLocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SetHomeLocation", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd93589583f6bL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429823339");
    b.version(2);
    b.aggregate("long", 0x6e9fd93589583f73L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("7971328689429823347").done();
    b.aggregate("lat", 0x6e9fd93589583f6eL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("7971328689429823342").done();
    b.alias("setHomeLocation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetHomeLocationUsingAircraftCurrentLocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SetHomeLocationUsingAircraftCurrentLocation", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895a9540L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429976384");
    b.version(2);
    b.alias("setHomeLocationUsingAircraftCurrentLocation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetLowBatteryWarningThreshold() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SetLowBatteryWarningThreshold", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895bcacfL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689430055631");
    b.version(2);
    b.aggregate("percent", 0x6e9fd935895bcaeeL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("7971328689430055662").done();
    b.alias("setLowBatteryWarningThreshold");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetSeriousLowBatteryWarningThreshold() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SetSeriousLowBatteryWarningThreshold", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895bcb00L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689430055680");
    b.version(2);
    b.aggregate("percent", 0x6e9fd935895bcb01L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("7971328689430055681").done();
    b.alias("setSeriousLowBatteryWarningThreshold");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetSmartReturnToHomeEnabled() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SetSmartReturnToHomeEnabled", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895bcb3cL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689430055740");
    b.version(2);
    b.property("enable", 0x6e9fd935895bcb3fL).type(PrimitiveTypeId.BOOLEAN).origin("7971328689430055743").done();
    b.alias("setSmartReturnToHomeEnabled");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpeedConditionalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "SpeedConditionalExpression", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x3f0a90391ea8938L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/283912609322404152");
    b.version(2);
    b.property("operator", 0x3f0a90391ea8971L).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932f45ebL)).origin("283912609322404209").done();
    b.aggregate("right", 0x3f0a90391ea896fL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL).optional(false).ordered(true).multiple(false).origin("283912609322404207").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStartGoHome() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StartGoHome", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895a950aL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429976330");
    b.version(2);
    b.alias("startGoHome");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStartLanding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StartLanding", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd93589596498L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429898392");
    b.version(2);
    b.alias("startLanding");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStartMission() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StartMission", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd935895bcb74L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689430055796");
    b.version(2);
    b.alias("startMission");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStartPrecisionTakeOff() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StartPrecisionTakeOff", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd93589596462L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429898338");
    b.version(2);
    b.alias("startPrecisionTakeOff");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStartTakeOff() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StartTakeOff", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd93589596447L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429898311");
    b.version(2);
    b.alias("startTakeOff");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Statement", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b453cL);
    b.class_(false, true, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690384188");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForText() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Text", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3feL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.MathElement", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bd6L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690879486");
    b.version(2);
    b.property("value", 0x53be3ecc0462d3ffL).type(PrimitiveTypeId.STRING).origin("6034329596690879487").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Then", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bccL);
    b.class_(false, false, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336716");
    b.version(2);
    b.aggregate("adaptiveBehavior", 0x53be3ecc045b45a9L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x4cdb8f81da5c7de7L).optional(false).ordered(true).multiple(false).origin("6034329596690384297").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnOffMotors() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnOffMotors", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd93589596429L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429898281");
    b.version(2);
    b.alias("turnOffMotors");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnOnMotors() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnOnMotors", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358959640bL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.CommandCall", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/7971328689429898251");
    b.version(2);
    b.alias("turnOnMotors");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Value", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc0462d3fbL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.MathElement", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bd6L);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690879483");
    b.version(2);
    b.property("value", 0x53be3ecc0462d3fcL).type(PrimitiveTypeId.INTEGER).origin("6034329596690879484").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "When", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045a8bcbL);
    b.class_(false, false, false);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690336715");
    b.version(2);
    b.aggregate("command", 0x4cdb8f81da5c7dbcL).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x6e9fd9358955fd28L).optional(false).ordered(true).multiple(false).origin("5538177954659204540").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "While", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b45acL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Statement", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b453cL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690384300");
    b.version(2);
    b.aggregate("condition", 0x53be3ecc045b45d2L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932ed73dL).optional(false).ordered(true).multiple(false).origin("6034329596690384338").done();
    b.aggregate("body", 0x53be3ecc045b45d4L).target(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b453cL).optional(true).ordered(true).multiple(false).origin("6034329596690384340").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWifiConditionalExtension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "WifiConditionalExtension", 0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b3fc39L);
    b.class_(false, false, false);
    b.parent(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea932a97ffL);
    b.origin("r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/1176377449927408697");
    b.version(2);
    b.property("operators", 0x1053550ed8b3fc3bL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x7970d3ea9334065dL)).origin("1176377449927408699").done();
    b.property("right", 0x1053550ed8b3fc3cL).type(MetaIdFactory.dataTypeId(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x1053550ed8b2a0a8L)).origin("1176377449927408700").done();
    return b.create();
  }
}
