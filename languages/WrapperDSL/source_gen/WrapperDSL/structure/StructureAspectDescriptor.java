package WrapperDSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAdviceAbstract = createDescriptorForAdviceAbstract();
  /*package*/ final ConceptDescriptor myConceptAfter = createDescriptorForAfter();
  /*package*/ final ConceptDescriptor myConceptAround = createDescriptorForAround();
  /*package*/ final ConceptDescriptor myConceptBefore = createDescriptorForBefore();
  /*package*/ final ConceptDescriptor myConceptBoat = createDescriptorForBoat();
  /*package*/ final ConceptDescriptor myConceptCommandCall = createDescriptorForCommandCall();
  /*package*/ final ConceptDescriptor myConceptDrone = createDescriptorForDrone();
  /*package*/ final ConceptDescriptor myConceptEntity = createDescriptorForEntity();
  /*package*/ final ConceptDescriptor myConceptEnvironment = createDescriptorForEnvironment();
  /*package*/ final ConceptDescriptor myConceptGiven = createDescriptorForGiven();
  /*package*/ final ConceptDescriptor myConceptIf = createDescriptorForIf();
  /*package*/ final ConceptDescriptor myConceptLand = createDescriptorForLand();
  /*package*/ final ConceptDescriptor myConceptListEntity = createDescriptorForListEntity();
  /*package*/ final ConceptDescriptor myConceptLogicalExpression = createDescriptorForLogicalExpression();
  /*package*/ final ConceptDescriptor myConceptOnLand = createDescriptorForOnLand();
  /*package*/ final ConceptDescriptor myConceptOnWater = createDescriptorForOnWater();
  /*package*/ final ConceptDescriptor myConceptPrimitive = createDescriptorForPrimitive();
  /*package*/ final ConceptDescriptor myConceptRepeat = createDescriptorForRepeat();
  /*package*/ final ConceptDescriptor myConceptScript = createDescriptorForScript();
  /*package*/ final ConceptDescriptor myConceptShutDown = createDescriptorForShutDown();
  /*package*/ final ConceptDescriptor myConceptStart = createDescriptorForStart();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptStatementApi = createDescriptorForStatementApi();
  /*package*/ final ConceptDescriptor myConceptStepLest = createDescriptorForStepLest();
  /*package*/ final ConceptDescriptor myConceptStepNearestToDestiny = createDescriptorForStepNearestToDestiny();
  /*package*/ final ConceptDescriptor myConceptStepNearestToLand = createDescriptorForStepNearestToLand();
  /*package*/ final ConceptDescriptor myConceptStepNearestToOrigem = createDescriptorForStepNearestToOrigem();
  /*package*/ final ConceptDescriptor myConceptStepNearestToPosition = createDescriptorForStepNearestToPosition();
  /*package*/ final ConceptDescriptor myConceptStepNearestToWater = createDescriptorForStepNearestToWater();
  /*package*/ final ConceptDescriptor myConceptStepNorth = createDescriptorForStepNorth();
  /*package*/ final ConceptDescriptor myConceptStepSouth = createDescriptorForStepSouth();
  /*package*/ final ConceptDescriptor myConceptStepWest = createDescriptorForStepWest();
  /*package*/ final ConceptDescriptor myConceptTakeOff = createDescriptorForTakeOff();
  /*package*/ final ConceptDescriptor myConceptThen = createDescriptorForThen();
  /*package*/ final ConceptDescriptor myConceptTurnLest = createDescriptorForTurnLest();
  /*package*/ final ConceptDescriptor myConceptTurnNorth = createDescriptorForTurnNorth();
  /*package*/ final ConceptDescriptor myConceptTurnSouth = createDescriptorForTurnSouth();
  /*package*/ final ConceptDescriptor myConceptTurnWest = createDescriptorForTurnWest();
  /*package*/ final ConceptDescriptor myConceptWhen = createDescriptorForWhen();
  /*package*/ final ConceptDescriptor myConceptWhile = createDescriptorForWhile();
  /*package*/ final ConceptDescriptor myConceptWrapperScript = createDescriptorForWrapperScript();
  /*package*/ final ConceptDescriptor myConcept_false = createDescriptorFor_false();
  /*package*/ final ConceptDescriptor myConcept_true = createDescriptorFor_true();
  /*package*/ final ConceptDescriptor myConceptand = createDescriptorForand();
  /*package*/ final ConceptDescriptor myConceptclause = createDescriptorForclause();
  /*package*/ final ConceptDescriptor myConceptconstante = createDescriptorForconstante();
  /*package*/ final ConceptDescriptor myConceptgreater = createDescriptorForgreater();
  /*package*/ final ConceptDescriptor myConceptgreaterEqual = createDescriptorForgreaterEqual();
  /*package*/ final ConceptDescriptor myConceptis = createDescriptorForis();
  /*package*/ final ConceptDescriptor myConceptnot = createDescriptorFornot();
  /*package*/ final ConceptDescriptor myConceptor = createDescriptorForor();
  /*package*/ final ConceptDescriptor myConceptsmaller = createDescriptorForsmaller();
  /*package*/ final ConceptDescriptor myConceptsmallerEqual = createDescriptorForsmallerEqual();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAdviceAbstract, myConceptAfter, myConceptAround, myConceptBefore, myConceptBoat, myConceptCommandCall, myConceptDrone, myConceptEntity, myConceptEnvironment, myConceptGiven, myConceptIf, myConceptLand, myConceptListEntity, myConceptLogicalExpression, myConceptOnLand, myConceptOnWater, myConceptPrimitive, myConceptRepeat, myConceptScript, myConceptShutDown, myConceptStart, myConceptState, myConceptStatement, myConceptStatementApi, myConceptStepLest, myConceptStepNearestToDestiny, myConceptStepNearestToLand, myConceptStepNearestToOrigem, myConceptStepNearestToPosition, myConceptStepNearestToWater, myConceptStepNorth, myConceptStepSouth, myConceptStepWest, myConceptTakeOff, myConceptThen, myConceptTurnLest, myConceptTurnNorth, myConceptTurnSouth, myConceptTurnWest, myConceptWhen, myConceptWhile, myConceptWrapperScript, myConcept_false, myConcept_true, myConceptand, myConceptclause, myConceptconstante, myConceptgreater, myConceptgreaterEqual, myConceptis, myConceptnot, myConceptor, myConceptsmaller, myConceptsmallerEqual);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AdviceAbstract:
        return myConceptAdviceAbstract;
      case LanguageConceptSwitch.After:
        return myConceptAfter;
      case LanguageConceptSwitch.Around:
        return myConceptAround;
      case LanguageConceptSwitch.Before:
        return myConceptBefore;
      case LanguageConceptSwitch.Boat:
        return myConceptBoat;
      case LanguageConceptSwitch.CommandCall:
        return myConceptCommandCall;
      case LanguageConceptSwitch.Drone:
        return myConceptDrone;
      case LanguageConceptSwitch.Entity:
        return myConceptEntity;
      case LanguageConceptSwitch.Environment:
        return myConceptEnvironment;
      case LanguageConceptSwitch.Given:
        return myConceptGiven;
      case LanguageConceptSwitch.If:
        return myConceptIf;
      case LanguageConceptSwitch.Land:
        return myConceptLand;
      case LanguageConceptSwitch.ListEntity:
        return myConceptListEntity;
      case LanguageConceptSwitch.LogicalExpression:
        return myConceptLogicalExpression;
      case LanguageConceptSwitch.OnLand:
        return myConceptOnLand;
      case LanguageConceptSwitch.OnWater:
        return myConceptOnWater;
      case LanguageConceptSwitch.Primitive:
        return myConceptPrimitive;
      case LanguageConceptSwitch.Repeat:
        return myConceptRepeat;
      case LanguageConceptSwitch.Script:
        return myConceptScript;
      case LanguageConceptSwitch.ShutDown:
        return myConceptShutDown;
      case LanguageConceptSwitch.Start:
        return myConceptStart;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.StatementApi:
        return myConceptStatementApi;
      case LanguageConceptSwitch.StepLest:
        return myConceptStepLest;
      case LanguageConceptSwitch.StepNearestToDestiny:
        return myConceptStepNearestToDestiny;
      case LanguageConceptSwitch.StepNearestToLand:
        return myConceptStepNearestToLand;
      case LanguageConceptSwitch.StepNearestToOrigem:
        return myConceptStepNearestToOrigem;
      case LanguageConceptSwitch.StepNearestToPosition:
        return myConceptStepNearestToPosition;
      case LanguageConceptSwitch.StepNearestToWater:
        return myConceptStepNearestToWater;
      case LanguageConceptSwitch.StepNorth:
        return myConceptStepNorth;
      case LanguageConceptSwitch.StepSouth:
        return myConceptStepSouth;
      case LanguageConceptSwitch.StepWest:
        return myConceptStepWest;
      case LanguageConceptSwitch.TakeOff:
        return myConceptTakeOff;
      case LanguageConceptSwitch.Then:
        return myConceptThen;
      case LanguageConceptSwitch.TurnLest:
        return myConceptTurnLest;
      case LanguageConceptSwitch.TurnNorth:
        return myConceptTurnNorth;
      case LanguageConceptSwitch.TurnSouth:
        return myConceptTurnSouth;
      case LanguageConceptSwitch.TurnWest:
        return myConceptTurnWest;
      case LanguageConceptSwitch.When:
        return myConceptWhen;
      case LanguageConceptSwitch.While:
        return myConceptWhile;
      case LanguageConceptSwitch.WrapperScript:
        return myConceptWrapperScript;
      case LanguageConceptSwitch._false:
        return myConcept_false;
      case LanguageConceptSwitch._true:
        return myConcept_true;
      case LanguageConceptSwitch.and:
        return myConceptand;
      case LanguageConceptSwitch.clause:
        return myConceptclause;
      case LanguageConceptSwitch.constante:
        return myConceptconstante;
      case LanguageConceptSwitch.greater:
        return myConceptgreater;
      case LanguageConceptSwitch.greaterEqual:
        return myConceptgreaterEqual;
      case LanguageConceptSwitch.is:
        return myConceptis;
      case LanguageConceptSwitch.not:
        return myConceptnot;
      case LanguageConceptSwitch.or:
        return myConceptor;
      case LanguageConceptSwitch.smaller:
        return myConceptsmaller;
      case LanguageConceptSwitch.smallerEqual:
        return myConceptsmallerEqual;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAdviceAbstract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "AdviceAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L);
    b.class_(false, true, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715227235");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAfter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "After", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66867L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.AdviceAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715227239");
    b.version(2);
    b.alias("After");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAround() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Around", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66868L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.AdviceAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715227240");
    b.version(2);
    b.alias("Arround");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBefore() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Before", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66866L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.AdviceAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715227238");
    b.version(2);
    b.alias("Before");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Boat", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd61L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202998959457");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CommandCall", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x3d4e131fa1842b5dL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/4417489311071742813");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDrone() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Drone", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x5e9c4d0cabd35de2L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Entity", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a46173766d75L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/6817408652749790690");
    b.version(2);
    b.property("id", 0x2481d1255afcc318L).type(PrimitiveTypeId.INTEGER).origin("2630613615731589912").done();
    b.property("bateria", 0x1fc7448200db0d06L).type(PrimitiveTypeId.INTEGER).origin("2289874260691979526").done();
    b.property("sobreAgua", 0x1fc7448200db0d0bL).type(PrimitiveTypeId.BOOLEAN).origin("2289874260691979531").done();
    b.property("distanciaDestino", 0x1fc7448200db0d12L).type(PrimitiveTypeId.INTEGER).origin("2289874260691979538").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Entity", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a46173766d75L);
    b.class_(false, true, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1766154742338579829");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnvironment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Environment", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1fc7448200dbc343L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Entity", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a46173766d75L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2289874260692026179");
    b.version(2);
    b.property("isStrongWind", 0x1fc7448200dbc344L).type(PrimitiveTypeId.BOOLEAN).origin("2289874260692026180").done();
    b.property("isLightWind", 0x70e726b19641288L).type(PrimitiveTypeId.BOOLEAN).origin("508469612252500616").done();
    b.property("isNormalWind", 0x70e726b196905f9L).type(PrimitiveTypeId.BOOLEAN).origin("508469612252825081").done();
    b.alias("Environment");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGiven() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Given", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647158L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8989071138036674904");
    b.version(2);
    b.aggregate("entity", 0x1882a4617377f311L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a4617377f30dL).optional(true).ordered(true).multiple(false).origin("1766154742338679569").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIf() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "If", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1ffL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Statement", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471679");
    b.version(2);
    b.aggregate("condition", 0xf8231681b95e200L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e20fL).optional(false).ordered(true).multiple(false).origin("1117509980750471680").done();
    b.aggregate("trueBranch", 0xf8231681b95e203L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL).optional(false).ordered(true).multiple(true).origin("1117509980750471683").done();
    b.aggregate("falseBranch", 0xf8231681b95e208L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL).optional(false).ordered(true).multiple(true).origin("1117509980750471688").done();
    b.alias("if");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Land", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5331L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495729");
    b.version(2);
    b.alias("Land");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ListEntity", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a4617377f30dL);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1766154742338679565");
    b.version(2);
    b.aggregate("entity", 0x1882a4617377f30eL).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a46173766d75L).optional(true).ordered(true).multiple(true).origin("1766154742338679566").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLogicalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "LogicalExpression", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e20fL);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471695");
    b.version(2);
    b.aggregate("clauses", 0x75041c03561733d6L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c03561733d0L).optional(false).ordered(true).multiple(true).origin("8431895202999251926").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOnLand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "OnLand", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6875dbacb66bbb3dL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.State", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd62L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7527163887061023549");
    b.version(2);
    b.alias("on Land");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOnWater() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "OnWater", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6875dbacb66bbb3cL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.State", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd62L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7527163887061023548");
    b.version(2);
    b.alias("on Water");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrimitive() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.class_(false, true, false);
    b.parent(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c03561733d0L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202998959461");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRepeat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Repeat", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e21aL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Statement", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471706");
    b.version(2);
    b.property("count", 0xf8231681b95e21bL).type(PrimitiveTypeId.INTEGER).origin("1117509980750471707").done();
    b.aggregate("body", 0xf8231681b95e21eL).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL).optional(false).ordered(true).multiple(true).origin("1117509980750471710").done();
    b.alias("repeat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScript() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Script", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b960746L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750481222");
    b.version(2);
    b.aggregate("body", 0xf8231681b960b16L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL).optional(false).ordered(true).multiple(true).origin("1117509980750482198").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShutDown() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ShutDown", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb532fL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495727");
    b.version(2);
    b.alias("Shut Down");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Start", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb532eL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495726");
    b.version(2);
    b.alias("Start");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "State", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd62L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.parent(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c03561733d0L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202998959458");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Statement", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.class_(false, true, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471675");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatementApi() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.class_(false, true, false);
    b.super_("WrapperDSL.structure.Statement", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715241283");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepLest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepLest", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5339L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495737");
    b.version(2);
    b.alias("Step Lest");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepNearestToDestiny() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepNearestToDestiny", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6875dbacb66bbb46L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7527163887061023558");
    b.version(2);
    b.alias("Step Nearest To Destiny");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepNearestToLand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepNearestToLand", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6875dbacb66bbb3eL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7527163887061023550");
    b.version(2);
    b.alias("Step Nearest To Land");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepNearestToOrigem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepNearestToOrigem", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6875dbacb66bbb47L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7527163887061023559");
    b.version(2);
    b.alias("Step Nearest To Origem");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepNearestToPosition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepNearestToPosition", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6875dbacb66bbb40L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7527163887061023552");
    b.version(2);
    b.property("latitude", 0x6875dbacb66bbb41L).type(PrimitiveTypeId.INTEGER).origin("7527163887061023553").done();
    b.property("longitude", 0x6875dbacb66bbb43L).type(PrimitiveTypeId.INTEGER).origin("7527163887061023555").done();
    b.alias("Step Nearest To Position");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepNearestToWater() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepNearestToWater", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6875dbacb66bbb3fL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7527163887061023551");
    b.version(2);
    b.alias("Step Nearest To Water");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepNorth() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepNorth", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5336L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495734");
    b.version(2);
    b.alias("Step North");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepSouth() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepSouth", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5337L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495735");
    b.version(2);
    b.alias("Step South");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepWest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepWest", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5338L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495736");
    b.version(2);
    b.alias("Step West");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTakeOff() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TakeOff", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5330L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495728");
    b.version(2);
    b.alias("Take Off");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Then", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647164L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8989071138036674916");
    b.version(2);
    b.aggregate("statements", 0x6b53188b89b69f49L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL).optional(true).ordered(true).multiple(false).origin("7733551972715241289").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnLest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnLest", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5335L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495733");
    b.version(2);
    b.alias("Turn Lest");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnNorth() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnNorth", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5332L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495730");
    b.version(2);
    b.alias("Turn North");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnSouth() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnSouth", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5333L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495731");
    b.version(2);
    b.alias("Turn South");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnWest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnWest", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5334L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementApi", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495732");
    b.version(2);
    b.alias("Turn West");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "When", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647163L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8989071138036674915");
    b.version(2);
    b.aggregate("call", 0x1fc7448200dd6d10L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L).optional(false).ordered(true).multiple(false).origin("2289874260692135184").done();
    b.aggregate("advice", 0x6b53188b89b670f5L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L).optional(false).ordered(true).multiple(false).origin("7733551972715229429").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "While", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e221L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Statement", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471713");
    b.version(2);
    b.aggregate("condition", 0xf8231681b95e222L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e20fL).optional(false).ordered(true).multiple(false).origin("1117509980750471714").done();
    b.aggregate("body", 0xf8231681b95e225L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL).optional(false).ordered(true).multiple(true).origin("1117509980750471717").done();
    b.alias("while");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWrapperScript() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "WrapperScript", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x5ef0a89f564c5022L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/6841153236276891682");
    b.version(2);
    b.aggregate("Given", 0x5ef0a89f564c5025L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647158L).optional(false).ordered(true).multiple(false).origin("6841153236276891685").done();
    b.aggregate("When", 0x5ef0a89f564c5027L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647163L).optional(false).ordered(true).multiple(false).origin("6841153236276891687").done();
    b.aggregate("Then", 0x5ef0a89f564c502aL).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647164L).optional(false).ordered(true).multiple(false).origin("6841153236276891690").done();
    b.alias("Wrapper Script");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFor_false() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "_false", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c0356140c98L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999045272");
    b.version(2);
    b.alias("false");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFor_true() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "_true", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c0356140c97L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999045271");
    b.version(2);
    b.alias("true");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "and", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afcd217L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731593751");
    b.version(2);
    b.alias("and");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForclause() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "clause", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c03561733d0L);
    b.interface_();
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999251920");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForconstante() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "constante", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c0356140c96L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999045270");
    b.version(2);
    b.property("value", 0x75041c0356140c9bL).type(PrimitiveTypeId.INTEGER).origin("8431895202999045275").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForgreater() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "greater", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c0356140c92L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999045266");
    b.version(2);
    b.alias(">");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForgreaterEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "greaterEqual", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c0356140c93L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999045267");
    b.version(2);
    b.alias(">=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForis() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "is", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c0356140c90L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999045264");
    b.version(2);
    b.alias("is");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFornot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "not", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd64L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202998959460");
    b.version(2);
    b.alias("not");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "or", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd63L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202998959459");
    b.version(2);
    b.alias("or");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForsmaller() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "smaller", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c0356140c94L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999045268");
    b.version(2);
    b.alias("<");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForsmallerEqual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "smallerEqual", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c0356140c95L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Primitive", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x75041c035612bd65L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8431895202999045269");
    b.version(2);
    b.alias("<=");
    return b.create();
  }
}
