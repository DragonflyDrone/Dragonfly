package WrapperDSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAdviceAbstract = createDescriptorForAdviceAbstract();
  /*package*/ final ConceptDescriptor myConceptAfter = createDescriptorForAfter();
  /*package*/ final ConceptDescriptor myConceptAround = createDescriptorForAround();
  /*package*/ final ConceptDescriptor myConceptBefore = createDescriptorForBefore();
  /*package*/ final ConceptDescriptor myConceptCommandCall = createDescriptorForCommandCall();
  /*package*/ final ConceptDescriptor myConceptDrone = createDescriptorForDrone();
  /*package*/ final ConceptDescriptor myConceptEntity = createDescriptorForEntity();
  /*package*/ final ConceptDescriptor myConceptEnvironment = createDescriptorForEnvironment();
  /*package*/ final ConceptDescriptor myConceptGiven = createDescriptorForGiven();
  /*package*/ final ConceptDescriptor myConceptIfStatement = createDescriptorForIfStatement();
  /*package*/ final ConceptDescriptor myConceptLand = createDescriptorForLand();
  /*package*/ final ConceptDescriptor myConceptListEntity = createDescriptorForListEntity();
  /*package*/ final ConceptDescriptor myConceptLogicalExpression = createDescriptorForLogicalExpression();
  /*package*/ final ConceptDescriptor myConceptRepeat = createDescriptorForRepeat();
  /*package*/ final ConceptDescriptor myConceptScript = createDescriptorForScript();
  /*package*/ final ConceptDescriptor myConceptShutDown = createDescriptorForShutDown();
  /*package*/ final ConceptDescriptor myConceptStart = createDescriptorForStart();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptStatementAPI = createDescriptorForStatementAPI();
  /*package*/ final ConceptDescriptor myConceptStatementAbstract = createDescriptorForStatementAbstract();
  /*package*/ final ConceptDescriptor myConceptStepLest = createDescriptorForStepLest();
  /*package*/ final ConceptDescriptor myConceptStepNorth = createDescriptorForStepNorth();
  /*package*/ final ConceptDescriptor myConceptStepSouth = createDescriptorForStepSouth();
  /*package*/ final ConceptDescriptor myConceptStepWest = createDescriptorForStepWest();
  /*package*/ final ConceptDescriptor myConceptTakeOff = createDescriptorForTakeOff();
  /*package*/ final ConceptDescriptor myConceptThen = createDescriptorForThen();
  /*package*/ final ConceptDescriptor myConceptTurnLest = createDescriptorForTurnLest();
  /*package*/ final ConceptDescriptor myConceptTurnNorth = createDescriptorForTurnNorth();
  /*package*/ final ConceptDescriptor myConceptTurnSouth = createDescriptorForTurnSouth();
  /*package*/ final ConceptDescriptor myConceptTurnWest = createDescriptorForTurnWest();
  /*package*/ final ConceptDescriptor myConceptWhen = createDescriptorForWhen();
  /*package*/ final ConceptDescriptor myConceptWhile = createDescriptorForWhile();
  /*package*/ final ConceptDescriptor myConceptWrapperScript = createDescriptorForWrapperScript();
  /*package*/ final ConceptDescriptor myConceptand = createDescriptorForand();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAdviceAbstract, myConceptAfter, myConceptAround, myConceptBefore, myConceptCommandCall, myConceptDrone, myConceptEntity, myConceptEnvironment, myConceptGiven, myConceptIfStatement, myConceptLand, myConceptListEntity, myConceptLogicalExpression, myConceptRepeat, myConceptScript, myConceptShutDown, myConceptStart, myConceptStatement, myConceptStatementAPI, myConceptStatementAbstract, myConceptStepLest, myConceptStepNorth, myConceptStepSouth, myConceptStepWest, myConceptTakeOff, myConceptThen, myConceptTurnLest, myConceptTurnNorth, myConceptTurnSouth, myConceptTurnWest, myConceptWhen, myConceptWhile, myConceptWrapperScript, myConceptand);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AdviceAbstract:
        return myConceptAdviceAbstract;
      case LanguageConceptSwitch.After:
        return myConceptAfter;
      case LanguageConceptSwitch.Around:
        return myConceptAround;
      case LanguageConceptSwitch.Before:
        return myConceptBefore;
      case LanguageConceptSwitch.CommandCall:
        return myConceptCommandCall;
      case LanguageConceptSwitch.Drone:
        return myConceptDrone;
      case LanguageConceptSwitch.Entity:
        return myConceptEntity;
      case LanguageConceptSwitch.Environment:
        return myConceptEnvironment;
      case LanguageConceptSwitch.Given:
        return myConceptGiven;
      case LanguageConceptSwitch.IfStatement:
        return myConceptIfStatement;
      case LanguageConceptSwitch.Land:
        return myConceptLand;
      case LanguageConceptSwitch.ListEntity:
        return myConceptListEntity;
      case LanguageConceptSwitch.LogicalExpression:
        return myConceptLogicalExpression;
      case LanguageConceptSwitch.Repeat:
        return myConceptRepeat;
      case LanguageConceptSwitch.Script:
        return myConceptScript;
      case LanguageConceptSwitch.ShutDown:
        return myConceptShutDown;
      case LanguageConceptSwitch.Start:
        return myConceptStart;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.StatementAPI:
        return myConceptStatementAPI;
      case LanguageConceptSwitch.StatementAbstract:
        return myConceptStatementAbstract;
      case LanguageConceptSwitch.StepLest:
        return myConceptStepLest;
      case LanguageConceptSwitch.StepNorth:
        return myConceptStepNorth;
      case LanguageConceptSwitch.StepSouth:
        return myConceptStepSouth;
      case LanguageConceptSwitch.StepWest:
        return myConceptStepWest;
      case LanguageConceptSwitch.TakeOff:
        return myConceptTakeOff;
      case LanguageConceptSwitch.Then:
        return myConceptThen;
      case LanguageConceptSwitch.TurnLest:
        return myConceptTurnLest;
      case LanguageConceptSwitch.TurnNorth:
        return myConceptTurnNorth;
      case LanguageConceptSwitch.TurnSouth:
        return myConceptTurnSouth;
      case LanguageConceptSwitch.TurnWest:
        return myConceptTurnWest;
      case LanguageConceptSwitch.When:
        return myConceptWhen;
      case LanguageConceptSwitch.While:
        return myConceptWhile;
      case LanguageConceptSwitch.WrapperScript:
        return myConceptWrapperScript;
      case LanguageConceptSwitch.and:
        return myConceptand;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAdviceAbstract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "AdviceAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L);
    b.class_(false, true, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715227235");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAfter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "After", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66867L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.AdviceAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715227239");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAround() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Around", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66868L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.AdviceAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715227240");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBefore() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Before", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66866L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.AdviceAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715227238");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "CommandCall", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x3d4e131fa1842b5dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/4417489311071742813");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDrone() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Drone", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x5e9c4d0cabd35de2L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Entity", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a46173766d75L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/6817408652749790690");
    b.version(2);
    b.property("id", 0x2481d1255afcc318L).type(PrimitiveTypeId.INTEGER).origin("2630613615731589912").done();
    b.property("bateria", 0x1fc7448200db0d06L).type(PrimitiveTypeId.INTEGER).origin("2289874260691979526").done();
    b.property("sobreAgua", 0x1fc7448200db0d0bL).type(PrimitiveTypeId.BOOLEAN).origin("2289874260691979531").done();
    b.property("distanciaDestino", 0x1fc7448200db0d12L).type(PrimitiveTypeId.INTEGER).origin("2289874260691979538").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Entity", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a46173766d75L);
    b.class_(false, true, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1766154742338579829");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnvironment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Environment", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1fc7448200dbc343L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.Entity", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a46173766d75L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2289874260692026179");
    b.version(2);
    b.property("ventoForte", 0x1fc7448200dbc344L).type(PrimitiveTypeId.BOOLEAN).origin("2289874260692026180").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGiven() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Given", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647158L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8989071138036674904");
    b.version(2);
    b.aggregate("entity", 0x1882a4617377f311L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a4617377f30dL).optional(true).ordered(true).multiple(false).origin("1766154742338679569").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIfStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "IfStatement", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1ffL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471679");
    b.version(2);
    b.aggregate("condition", 0xf8231681b95e200L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e20fL).optional(false).ordered(true).multiple(false).origin("1117509980750471680").done();
    b.aggregate("trueBranch", 0xf8231681b95e203L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e124L).optional(false).ordered(true).multiple(false).origin("1117509980750471683").done();
    b.aggregate("falseBranch", 0xf8231681b95e208L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e124L).optional(false).ordered(true).multiple(false).origin("1117509980750471688").done();
    b.alias("if");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Land", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5331L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495729");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ListEntity", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a4617377f30dL);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1766154742338679565");
    b.version(2);
    b.aggregate("entity", 0x1882a4617377f30eL).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x1882a46173766d75L).optional(true).ordered(true).multiple(true).origin("1766154742338679566").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLogicalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "LogicalExpression", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e20fL);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471695");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRepeat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Repeat", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e21aL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471706");
    b.version(2);
    b.property("count", 0xf8231681b95e21bL).type(PrimitiveTypeId.INTEGER).origin("1117509980750471707").done();
    b.aggregate("body", 0xf8231681b95e21eL).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e124L).optional(false).ordered(true).multiple(false).origin("1117509980750471710").done();
    b.alias("repeat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScript() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Script", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b960746L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750481222");
    b.version(2);
    b.aggregate("body", 0xf8231681b960b16L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e124L).optional(false).ordered(true).multiple(false).origin("1117509980750482198").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShutDown() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "ShutDown", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb532fL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495727");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Start", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb532eL);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495726");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Statement", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e124L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471460");
    b.version(2);
    b.aggregate("commands", 0xf8231681b95e1f1L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL).optional(true).ordered(true).multiple(true).origin("1117509980750471665").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatementAPI() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.class_(false, true, false);
    b.super_("WrapperDSL.structure.StatementAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/7733551972715241283");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatementAbstract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StatementAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.class_(false, true, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471675");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepLest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepLest", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5339L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495737");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepNorth() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepNorth", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5336L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495734");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepSouth() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepSouth", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5337L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495735");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepWest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "StepWest", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5338L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495736");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTakeOff() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TakeOff", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5330L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495728");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "Then", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647164L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8989071138036674916");
    b.version(2);
    b.aggregate("statements", 0x6b53188b89b69f49L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL).optional(true).ordered(true).multiple(false).origin("7733551972715241289").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnLest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnLest", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5335L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495733");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnNorth() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnNorth", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5332L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495730");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnSouth() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnSouth", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5333L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495731");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTurnWest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "TurnWest", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afb5334L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAPI", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731495732");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "When", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647163L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/8989071138036674915");
    b.version(2);
    b.aggregate("call", 0x1fc7448200dd6d10L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b69f43L).optional(false).ordered(true).multiple(false).origin("2289874260692135184").done();
    b.aggregate("advice", 0x6b53188b89b670f5L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x6b53188b89b66863L).optional(false).ordered(true).multiple(false).origin("7733551972715229429").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "While", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e221L);
    b.class_(false, false, false);
    b.super_("WrapperDSL.structure.StatementAbstract", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e1fbL);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/1117509980750471713");
    b.version(2);
    b.aggregate("condition", 0xf8231681b95e222L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e20fL).optional(false).ordered(true).multiple(false).origin("1117509980750471714").done();
    b.aggregate("body", 0xf8231681b95e225L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0xf8231681b95e124L).optional(false).ordered(true).multiple(false).origin("1117509980750471717").done();
    b.alias("while");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWrapperScript() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "WrapperScript", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x5ef0a89f564c5022L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/6841153236276891682");
    b.version(2);
    b.aggregate("Given", 0x5ef0a89f564c5025L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647158L).optional(false).ordered(true).multiple(false).origin("6841153236276891685").done();
    b.aggregate("When", 0x5ef0a89f564c5027L).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647163L).optional(false).ordered(true).multiple(false).origin("6841153236276891687").done();
    b.aggregate("Then", 0x5ef0a89f564c502aL).target(0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x7cbf9892eb647164L).optional(false).ordered(true).multiple(false).origin("6841153236276891690").done();
    b.alias("Wrapper Script");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WrapperDSL", "and", 0x3c0688eb4e024d93L, 0x86be1d02f4019544L, 0x2481d1255afcd217L);
    b.class_(false, false, false);
    b.origin("r:eaaea31a-4f59-4dab-b633-fc8803df80fe(WrapperDSL.structure)/2630613615731593751");
    b.version(2);
    return b.create();
  }
}
