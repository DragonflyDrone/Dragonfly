package WrapperDSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_TypeOfAdaptationEnum extends EnumerationDescriptorBase {

  public EnumerationDescriptor_TypeOfAdaptationEnum() {
    super(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b44a3L, "TypeOfAdaptationEnum", "r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690384035");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_around_0 = new EnumerationDescriptor.MemberDescriptor("around", "Around", 0x53be3ecc045b44a5L, "r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690384037");
  private final EnumerationDescriptor.MemberDescriptor myMember_before_0 = new EnumerationDescriptor.MemberDescriptor("before", "Before", 0x53be3ecc045b44a4L, "r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690384036");
  private final EnumerationDescriptor.MemberDescriptor myMember_after_0 = new EnumerationDescriptor.MemberDescriptor("after", "After", 0x53be3ecc045b44a8L, "r:791815a7-51ee-4ec9-bcc3-2de9ba0316d3(WrapperDSL.structure)/6034329596690384040");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53be3ecc045b44a3L, 0x53be3ecc045b44a5L, 0x53be3ecc045b44a4L, 0x53be3ecc045b44a8L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_around_0, myMember_before_0, myMember_after_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "around":
        return myMember_around_0;
      case "before":
        return myMember_before_0;
      case "after":
        return myMember_after_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
